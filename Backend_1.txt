Backend Programming - Midterm Exam - First Variant

1. What is the difference between Cookie-based authentication and JWT token-based authentication system?
- Cookie-based auth stores session data on the server, and the client gets a session ID stored in a cookie.
- JWT (JSON Web Token) stores all session data in the token itself, which is stored client-side and sent with each request.
- JWT is stateless; cookie-based auth is stateful.

2. Describe the difference between prototypal and classical inheritance:
- Prototypal: Objects inherit directly from other objects. More flexible and dynamic.
- Classical: Based on classes; inheritance is defined before instantiation.
- JavaScript uses prototypal inheritance by default, but supports class-based syntax (ES6+).

3. What will the code print and why?
Code:
var arr1 = "john".split('');
var arr2 = arr1.reverse();
var arr3 = "jones".split('');
arr2.push(arr3);
console.log("array 1: length=" + arr1.length + " last=" + arr1.slice(-1));
console.log("array 2: length=" + arr2.length + " last=" + arr2.slice(-1));

Answer:
Both arr1 and arr2 reference the same reversed array.
arr2.push(arr3) pushes the whole array as one element, so:
Output:
array 1: length=5 last=j,o,n,e,s
array 2: length=5 last=j,o,n,e,s

4. What will the following code output and why:
Code:
var hero = {
    _name: 'John Doe',
    getSecretIdentity: function (){
        return this._name;
    }
};
var stoleSecretIdentity = hero.getSecretIdentity;
console.log(stoleSecretIdentity());
console.log(hero.getSecretIdentity());

Answer:
stoleSecretIdentity is called without an object, so 'this' is undefined or global, returning undefined.
Second call returns 'John Doe'.
Output:
undefined
John Doe

5. What will the output of this code be and why?
Code:
var x = 21;
var girl = function () {
    console.log(x);
    var x = 20;
};
girl();

Answer:
Due to hoisting, 'var x' is hoisted but not initialized. Inside function, x is undefined at log time.
Output:
undefined

6. Write a JavaScript function to convert an amount into coins.
function amountToCoins(amount, coins) {
    let result = [];
    for (let i = 0; i < coins.length; i++) {
	coins.sort((a, b) => b - a);
        while (amount >= coins[i]) {
            amount -= coins[i];
            result.push(coins[i]);
        }
    }
    return result;
}
Example: amountToCoins(46, [25, 10, 5, 2, 1]) => [25, 10, 10, 1]

7. Write a JavaScript function to extract unique characters from a string
function uniqueChars(str) {
    let result = '';
    for (let i = 0; i < str.length; i++) {
        if (result.indexOf(str[i]) === -1) {
            result += str[i];
        }
    }
    return result;
}